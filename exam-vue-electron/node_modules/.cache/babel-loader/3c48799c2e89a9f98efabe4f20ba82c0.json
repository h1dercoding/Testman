{"remainingRequest":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\src\\utils\\request.js","dependencies":[{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\src\\utils\\request.js","mtime":1649778726000},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\babel.config.js","mtime":1648627002000},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683967470734},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\babel-loader\\lib\\index.js","mtime":1683967472581}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport axios from 'axios';\nimport store from \"../store\";\nimport { VueAxios } from \"./axios\";\nimport notification from 'ant-design-vue/es/notification';\nimport { ACCESS_TOKEN } from \"../store/mutation-types\"; // 创建 axios 实例\n\nvar service = axios.create({\n  baseURL: 'http://18.163.188.158:9527/api',\n  // api base_url\n  timeout: 6000 // 请求超时时间\n\n});\n\nvar err = function err(error) {\n  if (error.response) {\n    var data = error.response.data;\n    var token = Vue.ls.get(ACCESS_TOKEN);\n\n    if (error.response.status === 403) {\n      notification.error({\n        message: 'Forbidden',\n        description: data.message\n      });\n    }\n\n    if (error.response.status === 401 && !(data.result && data.result.isLogin)) {\n      notification.error({\n        message: 'Unauthorized',\n        description: 'Authorization verification failed'\n      });\n\n      if (token) {\n        store.dispatch('Logout').then(function () {\n          setTimeout(function () {\n            window.location.reload();\n          }, 1500);\n        });\n      }\n    }\n  }\n\n  return Promise.reject(error);\n}; // request interceptor\n\n\nservice.interceptors.request.use(function (config) {\n  var token = Vue.ls.get(ACCESS_TOKEN);\n\n  if (token) {\n    // 如果localStorage中有\"Access-Token\"属性，就在请求头里加上\n    config.headers['Access-Token'] = token; // 让每个请求携带自定义 token 请根据实际情况自行修改\n  }\n\n  return config;\n}, err); // response interceptor\n\nservice.interceptors.response.use(function (response) {\n  return response.data;\n}, err);\nvar installer = {\n  vm: {},\n  install: function install(Vue) {\n    Vue.use(VueAxios, service);\n  }\n};\nexport { installer as VueAxios, service as axios };",{"version":3,"sources":["C:/Users/17982/Desktop/Testman/exam-vue-electron/src/utils/request.js"],"names":["Vue","axios","store","VueAxios","notification","ACCESS_TOKEN","service","create","baseURL","timeout","err","error","response","data","token","ls","get","status","message","description","result","isLogin","dispatch","then","setTimeout","window","location","reload","Promise","reject","interceptors","request","use","config","headers","installer","vm","install"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP;AACA,SACEC,QADF;AAGA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SACEC,YADF,kC,CAIA;;AACA,IAAMC,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAE,gCADkB;AACgB;AAC3CC,EAAAA,OAAO,EAAE,IAFkB,CAEb;;AAFa,CAAb,CAAhB;;AAKA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AACrB,MAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,QAAMC,IAAI,GAAGF,KAAK,CAACC,QAAN,CAAeC,IAA5B;AACA,QAAMC,KAAK,GAAGd,GAAG,CAACe,EAAJ,CAAOC,GAAP,CAAWX,YAAX,CAAd;;AACA,QAAIM,KAAK,CAACC,QAAN,CAAeK,MAAf,KAA0B,GAA9B,EAAmC;AACjCb,MAAAA,YAAY,CAACO,KAAb,CAAmB;AACjBO,QAAAA,OAAO,EAAE,WADQ;AAEjBC,QAAAA,WAAW,EAAEN,IAAI,CAACK;AAFD,OAAnB;AAID;;AACD,QAAIP,KAAK,CAACC,QAAN,CAAeK,MAAf,KAA0B,GAA1B,IAAiC,EAAEJ,IAAI,CAACO,MAAL,IAAeP,IAAI,CAACO,MAAL,CAAYC,OAA7B,CAArC,EAA4E;AAC1EjB,MAAAA,YAAY,CAACO,KAAb,CAAmB;AACjBO,QAAAA,OAAO,EAAE,cADQ;AAEjBC,QAAAA,WAAW,EAAE;AAFI,OAAnB;;AAIA,UAAIL,KAAJ,EAAW;AACTZ,QAAAA,KAAK,CAACoB,QAAN,CAAe,QAAf,EAAyBC,IAAzB,CAA8B,YAAM;AAClCC,UAAAA,UAAU,CAAC,YAAM;AACfC,YAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,WAFS,EAEP,IAFO,CAAV;AAGD,SAJD;AAKD;AACF;AACF;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAelB,KAAf,CAAP;AACD,CAzBD,C,CA2BA;;;AACAL,OAAO,CAACwB,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,UAAAC,MAAM,EAAI;AACzC,MAAMnB,KAAK,GAAGd,GAAG,CAACe,EAAJ,CAAOC,GAAP,CAAWX,YAAX,CAAd;;AACA,MAAIS,KAAJ,EAAW;AAAE;AACXmB,IAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiCpB,KAAjC,CADS,CAC8B;AACxC;;AACD,SAAOmB,MAAP;AACD,CAND,EAMGvB,GANH,E,CAQA;;AACAJ,OAAO,CAACwB,YAAR,CAAqBlB,QAArB,CAA8BoB,GAA9B,CAAkC,UAACpB,QAAD,EAAc;AAC9C,SAAOA,QAAQ,CAACC,IAAhB;AACD,CAFD,EAEGH,GAFH;AAIA,IAAMyB,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAE,EADY;AAEhBC,EAAAA,OAFgB,mBAEPrC,GAFO,EAEF;AACZA,IAAAA,GAAG,CAACgC,GAAJ,CAAQ7B,QAAR,EAAkBG,OAAlB;AACD;AAJe,CAAlB;AAOA,SACE6B,SAAS,IAAIhC,QADf,EAEEG,OAAO,IAAIL,KAFb","sourcesContent":["import Vue from 'vue'\nimport axios from 'axios'\nimport store from '../store'\nimport {\n  VueAxios\n} from './axios'\nimport notification from 'ant-design-vue/es/notification'\nimport {\n  ACCESS_TOKEN\n} from '../store/mutation-types'\n\n// 创建 axios 实例\nconst service = axios.create({\n  baseURL: 'http://18.163.188.158:9527/api', // api base_url\n  timeout: 6000 // 请求超时时间\n})\n\nconst err = (error) => {\n  if (error.response) {\n    const data = error.response.data\n    const token = Vue.ls.get(ACCESS_TOKEN)\n    if (error.response.status === 403) {\n      notification.error({\n        message: 'Forbidden',\n        description: data.message\n      })\n    }\n    if (error.response.status === 401 && !(data.result && data.result.isLogin)) {\n      notification.error({\n        message: 'Unauthorized',\n        description: 'Authorization verification failed'\n      })\n      if (token) {\n        store.dispatch('Logout').then(() => {\n          setTimeout(() => {\n            window.location.reload()\n          }, 1500)\n        })\n      }\n    }\n  }\n  return Promise.reject(error)\n}\n\n// request interceptor\nservice.interceptors.request.use(config => {\n  const token = Vue.ls.get(ACCESS_TOKEN)\n  if (token) { // 如果localStorage中有\"Access-Token\"属性，就在请求头里加上\n    config.headers['Access-Token'] = token // 让每个请求携带自定义 token 请根据实际情况自行修改\n  }\n  return config\n}, err)\n\n// response interceptor\nservice.interceptors.response.use((response) => {\n  return response.data\n}, err)\n\nconst installer = {\n  vm: {},\n  install (Vue) {\n    Vue.use(VueAxios, service)\n  }\n}\n\nexport {\n  installer as VueAxios,\n  service as axios\n}\n"]}]}