{"remainingRequest":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\src\\components\\GlobalHeader\\GlobalHeader.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\src\\components\\GlobalHeader\\GlobalHeader.vue","mtime":1648627002000},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\babel.config.js","mtime":1648627002000},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683967470734},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1683967466085},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\babel-loader\\lib\\index.js","mtime":1683967472581},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683967470734},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\vue-loader\\lib\\index.js","mtime":1683967474246}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport UserMenu from \"../tools/UserMenu\";\nimport SMenu from \"../Menu/\";\nimport Logo from \"../tools/Logo\";\nimport { mixin } from \"../../utils/mixin\";\nexport default {\n  name: 'GlobalHeader',\n  components: {\n    UserMenu: UserMenu,\n    SMenu: SMenu,\n    Logo: Logo\n  },\n  mixins: [mixin],\n  props: {\n    mode: {\n      type: String,\n      // sidemenu, topmenu\n      default: 'sidemenu'\n    },\n    menus: {\n      type: Array,\n      required: true\n    },\n    theme: {\n      type: String,\n      required: false,\n      default: 'dark'\n    },\n    collapsed: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    device: {\n      type: String,\n      required: false,\n      default: 'desktop'\n    }\n  },\n  data: function data() {\n    return {\n      visible: true,\n      oldScrollTop: 0\n    };\n  },\n  mounted: function mounted() {\n    document.body.addEventListener('scroll', this.handleScroll, {\n      passive: true\n    });\n  },\n  methods: {\n    handleScroll: function handleScroll() {\n      var _this = this;\n\n      if (!this.autoHideHeader) {\n        return;\n      }\n\n      var scrollTop = document.body.scrollTop + document.documentElement.scrollTop;\n\n      if (!this.ticking) {\n        this.ticking = true;\n        requestAnimationFrame(function () {\n          if (_this.oldScrollTop > scrollTop) {\n            _this.visible = true;\n          } else if (scrollTop > 300 && _this.visible) {\n            _this.visible = false;\n          } else if (scrollTop < 300 && !_this.visible) {\n            _this.visible = true;\n          }\n\n          _this.oldScrollTop = scrollTop;\n          _this.ticking = false;\n        });\n      }\n    },\n    toggle: function toggle() {\n      this.$emit('toggle');\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    document.body.removeEventListener('scroll', this.handleScroll, true);\n  }\n};",null]}