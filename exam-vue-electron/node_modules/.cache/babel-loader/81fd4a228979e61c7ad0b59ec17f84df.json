{"remainingRequest":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\src\\store\\modules\\user.js","dependencies":[{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\src\\store\\modules\\user.js","mtime":1648627002000},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\babel.config.js","mtime":1648627002000},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683967470734},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\babel-loader\\lib\\index.js","mtime":1683967472581}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport { login, getInfo, logout } from \"../../api/login\";\nimport { ACCESS_TOKEN } from \"../../store/mutation-types\";\nimport { welcome } from \"../../utils/util\";\nvar user = {\n  state: {\n    token: '',\n    name: '',\n    welcome: '',\n    avatar: '',\n    roles: [],\n    info: {}\n  },\n  mutations: {\n    SET_TOKEN: function SET_TOKEN(state, token) {\n      state.token = token;\n    },\n    SET_NAME: function SET_NAME(state, _ref) {\n      var name = _ref.name,\n          welcome = _ref.welcome;\n      state.name = name;\n      state.welcome = welcome;\n    },\n    SET_AVATAR: function SET_AVATAR(state, avatar) {\n      state.avatar = avatar;\n    },\n    SET_ROLES: function SET_ROLES(state, roles) {\n      state.roles = roles;\n    },\n    SET_INFO: function SET_INFO(state, info) {\n      state.info = info;\n    }\n  },\n  actions: {\n    // 登录\n    Login: function Login(_ref2, userInfo) {\n      var commit = _ref2.commit;\n      return new Promise(function (resolve, reject) {\n        login(userInfo).then(function (response) {\n          if (response.code === 0) {\n            var token = response.data; // 把接口返回的token字段的值设置到localStorage的token键值对中，token的有效期是1天,Vue.ls中的ls是localStorage的意思\n\n            Vue.ls.set(ACCESS_TOKEN, token, 24 * 60 * 60 * 1000); // 设置token事件,修改全局变量state中的token值，讲mutations中的SET_TOKEN事件\n\n            commit('SET_TOKEN', token);\n            resolve();\n          } else {\n            // 自定义错误\n            reject(new Error('用户名或密码错误'));\n          }\n        }).catch(function (error) {\n          console.log(error);\n          reject(error);\n        });\n      });\n    },\n    // 获取用户信息\n    GetInfo: function GetInfo(_ref3) {\n      var commit = _ref3.commit;\n      return new Promise(function (resolve, reject) {\n        getInfo().then(function (response) {\n          console.log('/user/info的响应如下：');\n          console.log(response);\n          var result = response.data; // 取出响应体\n\n          if (result.role && result.role.permissions.length > 0) {\n            // 如果权限\n            var role = result.role;\n            role.permissions = result.role.permissions; // permissions是给页面行为设置权限\n\n            role.permissions.map(function (per) {\n              if (per.actionEntitySet != null && per.actionEntitySet.length > 0) {\n                var action = per.actionEntitySet.map(function (action) {\n                  return action.action;\n                });\n                per.actionList = action;\n              }\n            });\n            role.permissionList = role.permissions.map(function (permission) {\n              // permissionList是从permissions中遍历解析得来的\n              return permission.permissionId;\n            }); // 这些设置都在Vuex的getters里面了\n\n            commit('SET_ROLES', result.role); // 在store中设置用户的权限\n\n            commit('SET_INFO', result); // 在store中设置用户信息\n          } else {\n            reject(new Error('getInfo: roles must be a non-null array !'));\n          } // 这些设置都在Vuex的getters里面了\n\n\n          commit('SET_NAME', {\n            name: result.name,\n            welcome: welcome()\n          }); // 设置用户名称\n\n          commit('SET_AVATAR', result.avatar); // 设置用户头像\n\n          resolve(response);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 登出\n    Logout: function Logout(_ref4) {\n      var commit = _ref4.commit,\n          state = _ref4.state;\n      return new Promise(function (resolve) {\n        commit('SET_TOKEN', '');\n        commit('SET_ROLES', []);\n        Vue.ls.remove(ACCESS_TOKEN);\n        logout(state.token).then(function () {\n          resolve();\n        }).catch(function () {\n          resolve();\n        });\n      });\n    }\n  }\n};\nexport default user;",{"version":3,"sources":["C:/Users/17982/Desktop/Testman/exam-vue-electron/src/store/modules/user.js"],"names":["Vue","login","getInfo","logout","ACCESS_TOKEN","welcome","user","state","token","name","avatar","roles","info","mutations","SET_TOKEN","SET_NAME","SET_AVATAR","SET_ROLES","SET_INFO","actions","Login","userInfo","commit","Promise","resolve","reject","then","response","code","data","ls","set","Error","catch","error","console","log","GetInfo","result","role","permissions","length","map","per","actionEntitySet","action","actionList","permissionList","permission","permissionId","Logout","remove"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,MAAzB;AACA,SAASC,YAAT;AACA,SAASC,OAAT;AAEA,IAAMC,IAAI,GAAG;AACXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,IAAI,EAAE,EAFD;AAGLJ,IAAAA,OAAO,EAAE,EAHJ;AAILK,IAAAA,MAAM,EAAE,EAJH;AAKLC,IAAAA,KAAK,EAAE,EALF;AAMLC,IAAAA,IAAI,EAAE;AAND,GADI;AAUXC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE,mBAACP,KAAD,EAAQC,KAAR,EAAkB;AAC3BD,MAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACD,KAHQ;AAITO,IAAAA,QAAQ,EAAE,kBAACR,KAAD,QAA8B;AAAA,UAApBE,IAAoB,QAApBA,IAAoB;AAAA,UAAdJ,OAAc,QAAdA,OAAc;AACtCE,MAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACAF,MAAAA,KAAK,CAACF,OAAN,GAAgBA,OAAhB;AACD,KAPQ;AAQTW,IAAAA,UAAU,EAAE,oBAACT,KAAD,EAAQG,MAAR,EAAmB;AAC7BH,MAAAA,KAAK,CAACG,MAAN,GAAeA,MAAf;AACD,KAVQ;AAWTO,IAAAA,SAAS,EAAE,mBAACV,KAAD,EAAQI,KAAR,EAAkB;AAC3BJ,MAAAA,KAAK,CAACI,KAAN,GAAcA,KAAd;AACD,KAbQ;AAcTO,IAAAA,QAAQ,EAAE,kBAACX,KAAD,EAAQK,IAAR,EAAiB;AACzBL,MAAAA,KAAK,CAACK,IAAN,GAAaA,IAAb;AACD;AAhBQ,GAVA;AA6BXO,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,KAFO,wBAEYC,QAFZ,EAEsB;AAAA,UAApBC,MAAoB,SAApBA,MAAoB;AAC3B,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCxB,QAAAA,KAAK,CAACoB,QAAD,CAAL,CAAgBK,IAAhB,CAAqB,UAAAC,QAAQ,EAAI;AAC/B,cAAIA,QAAQ,CAACC,IAAT,KAAkB,CAAtB,EAAyB;AACvB,gBAAMpB,KAAK,GAAGmB,QAAQ,CAACE,IAAvB,CADuB,CAEvB;;AACA7B,YAAAA,GAAG,CAAC8B,EAAJ,CAAOC,GAAP,CAAW3B,YAAX,EAAyBI,KAAzB,EAAgC,KAAK,EAAL,GAAU,EAAV,GAAe,IAA/C,EAHuB,CAIvB;;AACAc,YAAAA,MAAM,CAAC,WAAD,EAAcd,KAAd,CAAN;AACAgB,YAAAA,OAAO;AACR,WAPD,MAOO;AACL;AACAC,YAAAA,MAAM,CAAC,IAAIO,KAAJ,CAAU,UAAV,CAAD,CAAN;AACD;AACF,SAZD,EAYGC,KAZH,CAYS,UAAAC,KAAK,EAAI;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAT,UAAAA,MAAM,CAACS,KAAD,CAAN;AACD,SAfD;AAgBD,OAjBM,CAAP;AAkBD,KArBM;AAuBP;AACAG,IAAAA,OAxBO,0BAwBc;AAAA,UAAVf,MAAU,SAAVA,MAAU;AACnB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCvB,QAAAA,OAAO,GAAGwB,IAAV,CAAe,UAAAC,QAAQ,EAAI;AACzBQ,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACA,cAAMW,MAAM,GAAGX,QAAQ,CAACE,IAAxB,CAHyB,CAGI;;AAE7B,cAAIS,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACC,IAAP,CAAYC,WAAZ,CAAwBC,MAAxB,GAAiC,CAApD,EAAuD;AAAE;AACvD,gBAAMF,IAAI,GAAGD,MAAM,CAACC,IAApB;AACAA,YAAAA,IAAI,CAACC,WAAL,GAAmBF,MAAM,CAACC,IAAP,CAAYC,WAA/B,CAFqD,CAEV;;AAC3CD,YAAAA,IAAI,CAACC,WAAL,CAAiBE,GAAjB,CAAqB,UAAAC,GAAG,EAAI;AAC1B,kBAAIA,GAAG,CAACC,eAAJ,IAAuB,IAAvB,IAA+BD,GAAG,CAACC,eAAJ,CAAoBH,MAApB,GAA6B,CAAhE,EAAmE;AACjE,oBAAMI,MAAM,GAAGF,GAAG,CAACC,eAAJ,CAAoBF,GAApB,CAAwB,UAAAG,MAAM,EAAI;AAC/C,yBAAOA,MAAM,CAACA,MAAd;AACD,iBAFc,CAAf;AAGAF,gBAAAA,GAAG,CAACG,UAAJ,GAAiBD,MAAjB;AACD;AACF,aAPD;AAQAN,YAAAA,IAAI,CAACQ,cAAL,GAAsBR,IAAI,CAACC,WAAL,CAAiBE,GAAjB,CAAqB,UAAAM,UAAU,EAAI;AAAE;AACzD,qBAAOA,UAAU,CAACC,YAAlB;AACD,aAFqB,CAAtB,CAXqD,CAerD;;AACA3B,YAAAA,MAAM,CAAC,WAAD,EAAcgB,MAAM,CAACC,IAArB,CAAN,CAhBqD,CAgBpB;;AACjCjB,YAAAA,MAAM,CAAC,UAAD,EAAagB,MAAb,CAAN,CAjBqD,CAiB1B;AAC5B,WAlBD,MAkBO;AACLb,YAAAA,MAAM,CAAC,IAAIO,KAAJ,CAAU,2CAAV,CAAD,CAAN;AACD,WAzBwB,CA2BzB;;;AACAV,UAAAA,MAAM,CAAC,UAAD,EAAa;AAAEb,YAAAA,IAAI,EAAE6B,MAAM,CAAC7B,IAAf;AAAqBJ,YAAAA,OAAO,EAAEA,OAAO;AAArC,WAAb,CAAN,CA5ByB,CA4BqC;;AAC9DiB,UAAAA,MAAM,CAAC,YAAD,EAAegB,MAAM,CAAC5B,MAAtB,CAAN,CA7ByB,CA6BW;;AAEpCc,UAAAA,OAAO,CAACG,QAAD,CAAP;AACD,SAhCD,EAgCGM,KAhCH,CAgCS,UAAAC,KAAK,EAAI;AAChBT,UAAAA,MAAM,CAACS,KAAD,CAAN;AACD,SAlCD;AAmCD,OApCM,CAAP;AAqCD,KA9DM;AAgEP;AACAgB,IAAAA,MAjEO,yBAiEoB;AAAA,UAAjB5B,MAAiB,SAAjBA,MAAiB;AAAA,UAATf,KAAS,SAATA,KAAS;AACzB,aAAO,IAAIgB,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9BF,QAAAA,MAAM,CAAC,WAAD,EAAc,EAAd,CAAN;AACAA,QAAAA,MAAM,CAAC,WAAD,EAAc,EAAd,CAAN;AACAtB,QAAAA,GAAG,CAAC8B,EAAJ,CAAOqB,MAAP,CAAc/C,YAAd;AAEAD,QAAAA,MAAM,CAACI,KAAK,CAACC,KAAP,CAAN,CAAoBkB,IAApB,CAAyB,YAAM;AAC7BF,UAAAA,OAAO;AACR,SAFD,EAEGS,KAFH,CAES,YAAM;AACbT,UAAAA,OAAO;AACR,SAJD;AAKD,OAVM,CAAP;AAWD;AA7EM;AA7BE,CAAb;AA+GA,eAAelB,IAAf","sourcesContent":["import Vue from 'vue'\r\nimport { login, getInfo, logout } from '../../api/login'\r\nimport { ACCESS_TOKEN } from '../../store/mutation-types'\r\nimport { welcome } from '../../utils/util'\r\n\r\nconst user = {\r\n  state: {\r\n    token: '',\r\n    name: '',\r\n    welcome: '',\r\n    avatar: '',\r\n    roles: [],\r\n    info: {}\r\n  },\r\n\r\n  mutations: {\r\n    SET_TOKEN: (state, token) => {\r\n      state.token = token\r\n    },\r\n    SET_NAME: (state, { name, welcome }) => {\r\n      state.name = name\r\n      state.welcome = welcome\r\n    },\r\n    SET_AVATAR: (state, avatar) => {\r\n      state.avatar = avatar\r\n    },\r\n    SET_ROLES: (state, roles) => {\r\n      state.roles = roles\r\n    },\r\n    SET_INFO: (state, info) => {\r\n      state.info = info\r\n    }\r\n  },\r\n\r\n  actions: {\r\n    // 登录\r\n    Login ({ commit }, userInfo) {\r\n      return new Promise((resolve, reject) => {\r\n        login(userInfo).then(response => {\r\n          if (response.code === 0) {\r\n            const token = response.data\r\n            // 把接口返回的token字段的值设置到localStorage的token键值对中，token的有效期是1天,Vue.ls中的ls是localStorage的意思\r\n            Vue.ls.set(ACCESS_TOKEN, token, 24 * 60 * 60 * 1000)\r\n            // 设置token事件,修改全局变量state中的token值，讲mutations中的SET_TOKEN事件\r\n            commit('SET_TOKEN', token)\r\n            resolve()\r\n          } else {\r\n            // 自定义错误\r\n            reject(new Error('用户名或密码错误'))\r\n          }\r\n        }).catch(error => {\r\n          console.log(error)\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 获取用户信息\r\n    GetInfo ({ commit }) {\r\n      return new Promise((resolve, reject) => {\r\n        getInfo().then(response => {\r\n          console.log('/user/info的响应如下：')\r\n          console.log(response)\r\n          const result = response.data // 取出响应体\r\n\r\n          if (result.role && result.role.permissions.length > 0) { // 如果权限\r\n            const role = result.role\r\n            role.permissions = result.role.permissions // permissions是给页面行为设置权限\r\n            role.permissions.map(per => {\r\n              if (per.actionEntitySet != null && per.actionEntitySet.length > 0) {\r\n                const action = per.actionEntitySet.map(action => {\r\n                  return action.action\r\n                })\r\n                per.actionList = action\r\n              }\r\n            })\r\n            role.permissionList = role.permissions.map(permission => { // permissionList是从permissions中遍历解析得来的\r\n              return permission.permissionId\r\n            })\r\n\r\n            // 这些设置都在Vuex的getters里面了\r\n            commit('SET_ROLES', result.role) // 在store中设置用户的权限\r\n            commit('SET_INFO', result) // 在store中设置用户信息\r\n          } else {\r\n            reject(new Error('getInfo: roles must be a non-null array !'))\r\n          }\r\n\r\n          // 这些设置都在Vuex的getters里面了\r\n          commit('SET_NAME', { name: result.name, welcome: welcome() }) // 设置用户名称\r\n          commit('SET_AVATAR', result.avatar) // 设置用户头像\r\n\r\n          resolve(response)\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 登出\r\n    Logout ({ commit, state }) {\r\n      return new Promise((resolve) => {\r\n        commit('SET_TOKEN', '')\r\n        commit('SET_ROLES', [])\r\n        Vue.ls.remove(ACCESS_TOKEN)\r\n\r\n        logout(state.token).then(() => {\r\n          resolve()\r\n        }).catch(() => {\r\n          resolve()\r\n        })\r\n      })\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default user\r\n"]}]}