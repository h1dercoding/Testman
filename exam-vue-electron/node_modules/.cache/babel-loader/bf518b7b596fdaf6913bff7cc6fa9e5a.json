{"remainingRequest":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\src\\utils\\mixin.js","dependencies":[{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\src\\utils\\mixin.js","mtime":1648627002000},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\babel.config.js","mtime":1648627002000},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683967470734},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1683967466085},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\babel-loader\\lib\\index.js","mtime":1683967472581}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:/Users/17982/Desktop/Testman/exam-vue-electron/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n// import Vue from 'vue'\nimport { deviceEnquire, DEVICE_TYPE } from \"../utils/device\";\nimport { mapState } from 'vuex'; // const mixinsComputed = Vue.config.optionMergeStrategies.computed\n// const mixinsMethods = Vue.config.optionMergeStrategies.methods\n\nvar mixin = {\n  computed: _objectSpread({}, mapState({\n    layoutMode: function layoutMode(state) {\n      return state.app.layout;\n    },\n    navTheme: function navTheme(state) {\n      return state.app.theme;\n    },\n    primaryColor: function primaryColor(state) {\n      return state.app.color;\n    },\n    colorWeak: function colorWeak(state) {\n      return state.app.weak;\n    },\n    fixedHeader: function fixedHeader(state) {\n      return state.app.fixedHeader;\n    },\n    fixSiderbar: function fixSiderbar(state) {\n      return state.app.fixSiderbar;\n    },\n    fixSidebar: function fixSidebar(state) {\n      return state.app.fixSiderbar;\n    },\n    contentWidth: function contentWidth(state) {\n      return state.app.contentWidth;\n    },\n    autoHideHeader: function autoHideHeader(state) {\n      return state.app.autoHideHeader;\n    },\n    sidebarOpened: function sidebarOpened(state) {\n      return state.app.sidebar;\n    },\n    multiTab: function multiTab(state) {\n      return state.app.multiTab;\n    }\n  })),\n  methods: {\n    isTopMenu: function isTopMenu() {\n      return this.layoutMode === 'topmenu';\n    },\n    isSideMenu: function isSideMenu() {\n      return !this.isTopMenu();\n    }\n  }\n};\nvar mixinDevice = {\n  computed: _objectSpread({}, mapState({\n    device: function device(state) {\n      return state.app.device;\n    }\n  })),\n  methods: {\n    isMobile: function isMobile() {\n      return this.device === DEVICE_TYPE.MOBILE;\n    },\n    isDesktop: function isDesktop() {\n      return this.device === DEVICE_TYPE.DESKTOP;\n    },\n    isTablet: function isTablet() {\n      return this.device === DEVICE_TYPE.TABLET;\n    }\n  }\n};\nvar AppDeviceEnquire = {\n  mounted: function mounted() {\n    var $store = this.$store;\n    deviceEnquire(function (deviceType) {\n      switch (deviceType) {\n        case DEVICE_TYPE.DESKTOP:\n          $store.commit('TOGGLE_DEVICE', 'desktop');\n          $store.dispatch('setSidebar', true);\n          break;\n\n        case DEVICE_TYPE.TABLET:\n          $store.commit('TOGGLE_DEVICE', 'tablet');\n          $store.dispatch('setSidebar', false);\n          break;\n\n        case DEVICE_TYPE.MOBILE:\n        default:\n          $store.commit('TOGGLE_DEVICE', 'mobile');\n          $store.dispatch('setSidebar', true);\n          break;\n      }\n    });\n  }\n};\nexport { mixin, AppDeviceEnquire, mixinDevice };",null]}