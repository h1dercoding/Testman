{"remainingRequest":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\src\\components\\SettingDrawer\\SettingDrawer.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\src\\components\\SettingDrawer\\SettingDrawer.vue","mtime":1648627002000},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\babel.config.js","mtime":1648627002000},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683967470734},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1683967466085},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\babel-loader\\lib\\index.js","mtime":1683967472581},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683967470734},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\vue-loader\\lib\\index.js","mtime":1683967474246}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { DetailList } from \"../../components\";\nimport SettingItem from \"./SettingItem\";\nimport config from \"../../config/defaultSettings\";\nimport { updateTheme, updateColorWeak, colorList } from \"./settingConfig\";\nimport { mixin, mixinDevice } from \"../../utils/mixin\";\nexport default {\n  components: {\n    DetailList: DetailList,\n    SettingItem: SettingItem\n  },\n  mixins: [mixin, mixinDevice],\n  data: function data() {\n    return {\n      visible: true,\n      colorList: colorList,\n      baseConfig: Object.assign({}, config)\n    };\n  },\n  watch: {},\n  mounted: function mounted() {\n    var vm = this;\n    setTimeout(function () {\n      vm.visible = false;\n    }, 16); // 当主题色不是默认色时，才进行主题编译\n\n    if (this.primaryColor !== config.primaryColor) {\n      updateTheme(this.primaryColor);\n    }\n\n    if (this.colorWeak !== config.colorWeak) {\n      updateColorWeak(this.colorWeak);\n    }\n  },\n  methods: {\n    showDrawer: function showDrawer() {\n      this.visible = true;\n    },\n    onClose: function onClose() {\n      this.visible = false;\n    },\n    toggle: function toggle() {\n      this.visible = !this.visible;\n    },\n    onColorWeak: function onColorWeak(checked) {\n      this.baseConfig.colorWeak = checked;\n      this.$store.dispatch('ToggleWeak', checked);\n      updateColorWeak(checked);\n    },\n    onMultiTab: function onMultiTab(checked) {\n      this.baseConfig.multiTab = checked;\n      this.$store.dispatch('ToggleMultiTab', checked);\n    },\n    handleMenuTheme: function handleMenuTheme(theme) {\n      this.baseConfig.navTheme = theme;\n      this.$store.dispatch('ToggleTheme', theme);\n    },\n    doCopy: function doCopy() {\n      var _this = this;\n\n      var text = \"export default {\\n  primaryColor: '\".concat(this.baseConfig.primaryColor, \"', // primary color of ant design\\n  navTheme: '\").concat(this.baseConfig.navTheme, \"', // theme for nav menu\\n  layout: '\").concat(this.baseConfig.layout, \"', // nav menu position: sidemenu or topmenu\\n  contentWidth: '\").concat(this.baseConfig.contentWidth, \"', // layout of content: Fluid or Fixed, only works when layout is topmenu\\n  fixedHeader: \").concat(this.baseConfig.fixedHeader, \", // sticky header\\n  fixSiderbar: \").concat(this.baseConfig.fixSiderbar, \", // sticky siderbar\\n  autoHideHeader: \").concat(this.baseConfig.autoHideHeader, \", //  auto hide header\\n  colorWeak: \").concat(this.baseConfig.colorWeak, \",\\n  multiTab: \").concat(this.baseConfig.multiTab, \",\\n  production: process.env.NODE_ENV === 'production' && process.env.VUE_APP_PREVIEW !== 'true',\\n  // vue-ls options\\n  storageOptions: {\\n    namespace: 'pro__',\\n    name: 'ls',\\n    storage: 'local',\\n  }\\n}\");\n      this.$copyText(text).then(function (message) {\n        console.log('copy', message);\n\n        _this.$message.success('复制完毕');\n      }).catch(function (err) {\n        console.log('copy.err', err);\n\n        _this.$message.error('复制失败');\n      });\n    },\n    handleLayout: function handleLayout(mode) {\n      this.baseConfig.layout = mode;\n      this.$store.dispatch('ToggleLayoutMode', mode); // 因为顶部菜单不能固定左侧菜单栏，所以强制关闭\n      //\n\n      this.handleFixSiderbar(false);\n    },\n    handleContentWidthChange: function handleContentWidthChange(type) {\n      this.baseConfig.contentWidth = type;\n      this.$store.dispatch('ToggleContentWidth', type);\n    },\n    changeColor: function changeColor(color) {\n      this.baseConfig.primaryColor = color;\n\n      if (this.primaryColor !== color) {\n        this.$store.dispatch('ToggleColor', color);\n        updateTheme(color);\n      }\n    },\n    handleFixedHeader: function handleFixedHeader(fixed) {\n      this.baseConfig.fixedHeader = fixed;\n      this.$store.dispatch('ToggleFixedHeader', fixed);\n    },\n    handleFixedHeaderHidden: function handleFixedHeaderHidden(autoHidden) {\n      this.baseConfig.autoHideHeader = autoHidden;\n      this.$store.dispatch('ToggleFixedHeaderHidden', autoHidden);\n    },\n    handleFixSiderbar: function handleFixSiderbar(fixed) {\n      if (this.layoutMode === 'topmenu') {\n        this.baseConfig.fixSiderbar = false;\n        this.$store.dispatch('ToggleFixSiderbar', false);\n        return;\n      }\n\n      this.baseConfig.fixSiderbar = fixed;\n      this.$store.dispatch('ToggleFixSiderbar', fixed);\n    }\n  }\n};",null]}