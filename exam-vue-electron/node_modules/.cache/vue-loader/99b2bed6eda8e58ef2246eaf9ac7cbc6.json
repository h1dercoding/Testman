{"remainingRequest":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\src\\views\\list\\ExamRecordDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\src\\views\\list\\ExamRecordDetail.vue","mtime":1648630258000},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\babel-loader\\lib\\index.js","mtime":1683967472581},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683967470734},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\vue-loader\\lib\\index.js","mtime":1683967474246}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getExamDetail, getQuestionDetail, getExamRecordDetail, getSubDetail } from '../../api/exam'\nimport UserMenu from '../../components/tools/UserMenu'\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'ExamRecordDetail',\n  components: {\n    UserMenu\n  },\n  data () {\n    return {\n      // 考试详情对象\n      examDetail: {},\n      // 主观题详情对象\n      subDetail: {},\n      // 考试记录详情对象\n      recordDetail: {},\n      // 用户做过的问题都放到这个数组中，键为问题id, 值为currentQuestion(其属性answers属性用于存放答案选项地id或ids),，用于存放用户勾选的答案\n      answersMap: {},\n      // 题目的正确答案\n      answersRightMap: {},\n      // 题目的作答结果(正确或错误)\n      resultsMap: {},\n      // 当前用户的问题\n      currentQuestion: '',\n      // 单选或判断题的绑定值，用于从answersMap中初始化做题状态\n      radioValue: '',\n      // 单选题的正确答案，用于从answersRightMap中初始化做题状态\n      radioRightValue: '',\n      // 多选题的绑定值，用于从answersMap中初始化做题状态\n      checkValues: [],\n      // 多选题的绑定值，用于从answersRightMap中初始化做题状态\n      checkRightValues: [],\n      optionStyle: {\n        display: 'block',\n        height: '30px',\n        lineHeight: '30px',\n        marginLeft: '0px'\n      }\n    }\n  },\n  computed: {\n    /**\n     * 当前题目用户是否作答正确\n     * */\n    questionRight () {\n      return this.resultsMap !== '' && this.resultsMap.get(this.currentQuestion.id) === 'True'\n    }\n  },\n  mounted () {\n    this.answersMap = new Map()\n    this.answersRightMap = new Map()\n    this.resultsMap = new Map()\n    const that = this\n    // 从后端获取考试的详细信息，渲染到考试详情里,需要加个延时，要不拿不到参数\n    getExamDetail(this.$route.params.exam_id)\n      .then(res => {\n        if (res.code === 0) {\n          // 赋值考试对象\n          that.examDetail = res.data\n          return res.data\n        } else {\n          this.$notification.error({\n            message: '获取考试详情失败',\n            description: res.msg\n          })\n        }\n      })\n    getSubDetail(this.$route.params.exam_id)\n      .then(res => {\n        if (res.code === 0) {\n          // 赋值考试对象\n          console.log(res)\n          that.subDetail = res.data\n          return res.data\n        } else {\n          this.$notification.error({\n            message: '获取主观题详情失败',\n            description: res.msg\n          })\n        }\n      })\n    // 查看考试记录详情，渲染到前端界面\n    getExamRecordDetail(this.$route.params.record_id)\n      .then(res => {\n        if (res.code === 0) {\n          console.log(res.data)\n          // 赋值考试对象\n          that.recordDetail = res.data\n          // 赋值用户的作答答案\n          that.objToMap()\n          return res.data\n        } else {\n          this.$notification.error({\n            message: '获取考试记录详情失败',\n            description: res.msg\n          })\n        }\n      })\n  },\n  methods: {\n    // 从全局变量中获取用户昵称和头像,\n    ...mapGetters(['nickname', 'avatar']),\n    /**\n     * 把后端传过来的对象Object转换成Map\n     **/\n    objToMap () {\n      for (const item in this.recordDetail.answersMap) {\n        this.answersMap.set(item, this.recordDetail.answersMap[item])\n      }\n\n      for (const item in this.recordDetail.answersRightMap) {\n        this.answersRightMap.set(item, this.recordDetail.answersRightMap[item])\n      }\n\n      for (const item in this.recordDetail.resultsMap) {\n        this.resultsMap.set(item, this.recordDetail.resultsMap[item])\n      }\n    },\n    getQuestionDetail (questionId, type) {\n      // 问题切换时从后端拿到问题详情，渲染到前端content中\n      const that = this\n      // 清空问题绑定的值\n      this.radioValue = ''\n      this.radioRightValue = ''\n      this.checkValues = []\n      this.checkRightValues = []\n      getQuestionDetail(questionId, type)\n        .then(res => {\n          if (res.code === 0) {\n            // 赋值当前考试对象\n            that.currentQuestion = res.data\n\n            if (that.currentQuestion.type === '单选题' || that.currentQuestion.type === '判断题') {\n              that.radioRightValue = that.answersRightMap.get(that.currentQuestion.id)[0]\n              that.radioValue = that.answersMap.get(that.currentQuestion.id)[0]\n            } else if (that.currentQuestion.type === '多选题') {\n              // 数组是引用类型，因此需要进行拷贝，千万不要直接赋值\n              Object.assign(that.checkRightValues, that.answersRightMap.get(that.currentQuestion.id))\n              Object.assign(that.checkValues, that.answersMap.get(that.currentQuestion.id))\n            }\n\n            return res.data\n          } else {\n            this.$notification.error({\n              message: '获取问题详情失败',\n              description: res.msg\n            })\n          }\n        })\n    },\n    getSubDetail (sub) {\n      const that = this\n      that.inputValue = ''\n      that.currentQuestion = sub\n      // 查看用户是不是已经做过这道题又切换回来的，answersMap中查找，能找到这个题目id对应的值数组不为空说明用户做过这道题\n      if (that.subMap.get(that.currentQuestion.id)) {\n        that.inputValue = that.subMap.get(that.currentQuestion.id).answer\n      }\n      console.log(that.currentQuestion)\n    }\n  }\n}\n",null]}