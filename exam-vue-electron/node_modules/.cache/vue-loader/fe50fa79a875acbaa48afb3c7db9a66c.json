{"remainingRequest":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\src\\views\\list\\ExamRecordDetail.vue?vue&type=template&id=098326f0&scoped=true&","dependencies":[{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\src\\views\\list\\ExamRecordDetail.vue","mtime":1648630258000},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683967470734},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1683967477253},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683967470734},{"path":"C:\\Users\\17982\\Desktop\\Testman\\exam-vue-electron\\node_modules\\vue-loader\\lib\\index.js","mtime":1683967474246}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"a-layout\",\n    [\n      _c(\n        \"a-layout-header\",\n        { staticClass: \"header\", staticStyle: { color: \"#fff\" } },\n        [\n          _vm.examDetail.exam\n            ? _c(\n                \"span\",\n                { staticStyle: { \"font-size\": \"25px\", \"margin-left\": \"0px\" } },\n                [\n                  _vm._v(\n                    \"\\n      \" +\n                      _vm._s(_vm.examDetail.exam.examSource) +\n                      \"\\n      \"\n                  ),\n                  _c(\"span\", { staticStyle: { \"font-size\": \"15px\" } }, [\n                    _vm._v(_vm._s(_vm.examDetail.exam.examDescription) + \" \"),\n                  ]),\n                ]\n              )\n            : _vm._e(),\n          _c(\n            \"span\",\n            { staticStyle: { float: \"right\" } },\n            [\n              _vm.recordDetail.examRecord\n                ? _c(\n                    \"span\",\n                    {\n                      staticStyle: {\n                        \"margin-right\": \"40px\",\n                        \"font-size\": \"20px\",\n                      },\n                    },\n                    [\n                      _vm._v(\"\\n        客观题得分：\"),\n                      _c(\"span\", { staticStyle: { color: \"red\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.recordDetail.examRecord.examJoinScore)\n                        ),\n                      ]),\n                      _vm._v(\" 分 \\n        \"),\n                      _c(\"span\", { staticStyle: { \"font-size\": \"15px\" } }, [\n                        _vm._v(\n                          \"参加考试时间：\" +\n                            _vm._s(_vm.recordDetail.examRecord.examJoinDate)\n                        ),\n                      ]),\n                    ]\n                  )\n                : _vm._e(),\n              _c(\"a-avatar\", {\n                staticClass: \"avatar\",\n                attrs: { size: \"small\", src: _vm.avatar() },\n              }),\n              _c(\"span\", { staticStyle: { \"margin-left\": \"12px\" } }, [\n                _vm._v(_vm._s(_vm.nickname())),\n              ]),\n            ],\n            1\n          ),\n        ]\n      ),\n      _c(\n        \"a-layout\",\n        [\n          _c(\n            \"a-layout-sider\",\n            {\n              style: {\n                background: \"#444\",\n                overflow: \"auto\",\n                height: \"95vh\",\n                position: \"fixed\",\n                left: 0,\n              },\n              attrs: { width: \"220\" },\n            },\n            [\n              _c(\n                \"a-menu\",\n                {\n                  style: { height: \"100%\", borderRight: 0 },\n                  attrs: {\n                    mode: \"inline\",\n                    defaultSelectedKeys: [\"1\"],\n                    defaultOpenKeys: [\n                      \"question_radio\",\n                      \"question_check\",\n                      \"question_judge\",\n                      \"question_input\",\n                      \"question_short_answer\",\n                      \"question_program\",\n                    ],\n                  },\n                },\n                [\n                  _c(\n                    \"a-sub-menu\",\n                    { key: \"question_radio\" },\n                    [\n                      _vm.examDetail.exam\n                        ? _c(\n                            \"span\",\n                            { attrs: { slot: \"title\" }, slot: \"title\" },\n                            [\n                              _c(\"a-icon\", {\n                                attrs: {\n                                  type: \"check-circle\",\n                                  theme: \"twoTone\",\n                                },\n                              }),\n                              _vm._v(\n                                \"单选题(每题\" +\n                                  _vm._s(_vm.currentQuestion.sqScore) +\n                                  \"分)\"\n                              ),\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm._l(_vm.examDetail.radioIds, function (item, index) {\n                        return _c(\n                          \"a-menu-item\",\n                          {\n                            key: item,\n                            on: {\n                              click: function ($event) {\n                                return _vm.getQuestionDetail(item, 1)\n                              },\n                            },\n                          },\n                          [\n                            _vm.resultsMap.get(item) === \"True\"\n                              ? _c(\"a-icon\", { attrs: { type: \"check\" } })\n                              : _vm._e(),\n                            _vm.resultsMap.get(item) === \"False\"\n                              ? _c(\"a-icon\", { attrs: { type: \"close\" } })\n                              : _vm._e(),\n                            _vm._v(\n                              \"\\n            题目\" +\n                                _vm._s(index + 1) +\n                                \"\\n          \"\n                            ),\n                          ],\n                          1\n                        )\n                      }),\n                    ],\n                    2\n                  ),\n                  _c(\n                    \"a-sub-menu\",\n                    { key: \"question_check\" },\n                    [\n                      _vm.examDetail.exam\n                        ? _c(\n                            \"span\",\n                            { attrs: { slot: \"title\" }, slot: \"title\" },\n                            [\n                              _c(\"a-icon\", {\n                                attrs: {\n                                  type: \"check-square\",\n                                  theme: \"twoTone\",\n                                },\n                              }),\n                              _vm._v(\n                                \"多选题(每题\" +\n                                  _vm._s(_vm.currentQuestion.mqScore) +\n                                  \"分)\"\n                              ),\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm._l(_vm.examDetail.checkIds, function (item, index) {\n                        return _c(\n                          \"a-menu-item\",\n                          {\n                            key: item,\n                            on: {\n                              click: function ($event) {\n                                return _vm.getQuestionDetail(item, 2)\n                              },\n                            },\n                          },\n                          [\n                            _vm.resultsMap.get(item) === \"True\"\n                              ? _c(\"a-icon\", { attrs: { type: \"check\" } })\n                              : _vm._e(),\n                            _vm.resultsMap.get(item) === \"False\"\n                              ? _c(\"a-icon\", { attrs: { type: \"close\" } })\n                              : _vm._e(),\n                            _vm._v(\n                              \"\\n            题目\" +\n                                _vm._s(index + 1) +\n                                \"\\n          \"\n                            ),\n                          ],\n                          1\n                        )\n                      }),\n                    ],\n                    2\n                  ),\n                  _c(\n                    \"a-sub-menu\",\n                    { key: \"question_judge\" },\n                    [\n                      _vm.examDetail.exam\n                        ? _c(\n                            \"span\",\n                            { attrs: { slot: \"title\" }, slot: \"title\" },\n                            [\n                              _c(\"a-icon\", {\n                                attrs: { type: \"like\", theme: \"twoTone\" },\n                              }),\n                              _vm._v(\n                                \"判断题(每题\" +\n                                  _vm._s(_vm.currentQuestion.jqScore) +\n                                  \"分)\"\n                              ),\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm._l(_vm.examDetail.judgeIds, function (item, index) {\n                        return _c(\n                          \"a-menu-item\",\n                          {\n                            key: item,\n                            on: {\n                              click: function ($event) {\n                                return _vm.getQuestionDetail(item, 3)\n                              },\n                            },\n                          },\n                          [\n                            _vm.resultsMap.get(item) === \"True\"\n                              ? _c(\"a-icon\", { attrs: { type: \"check\" } })\n                              : _vm._e(),\n                            _vm.resultsMap.get(item) === \"False\"\n                              ? _c(\"a-icon\", { attrs: { type: \"close\" } })\n                              : _vm._e(),\n                            _vm._v(\n                              \"\\n            题目\" +\n                                _vm._s(index + 1) +\n                                \"\\n          \"\n                            ),\n                          ],\n                          1\n                        )\n                      }),\n                    ],\n                    2\n                  ),\n                  _c(\n                    \"a-sub-menu\",\n                    { key: \"question_input\" },\n                    [\n                      _vm.examDetail.exam\n                        ? _c(\n                            \"span\",\n                            { attrs: { slot: \"title\" }, slot: \"title\" },\n                            [\n                              _c(\"a-icon\", {\n                                attrs: { type: \"eye\", theme: \"twoTone\" },\n                              }),\n                              _vm._v(\n                                \"填空题(每题\" +\n                                  _vm._s(_vm.currentQuestion.iqScore) +\n                                  \"分)\"\n                              ),\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm._l(_vm.subDetail, function (item, index) {\n                        return item.type === \"填空题\"\n                          ? _c(\n                              \"a-menu-item\",\n                              {\n                                key: index,\n                                on: {\n                                  click: function ($event) {\n                                    return _vm.getSubDetail(item)\n                                  },\n                                },\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n            题目\" +\n                                    _vm._s(index + 1) +\n                                    \"\\n          \"\n                                ),\n                              ]\n                            )\n                          : _vm._e()\n                      }),\n                    ],\n                    2\n                  ),\n                  _c(\n                    \"a-sub-menu\",\n                    { key: \"question_short_answer\" },\n                    [\n                      _vm.examDetail.exam\n                        ? _c(\n                            \"span\",\n                            { attrs: { slot: \"title\" }, slot: \"title\" },\n                            [\n                              _c(\"a-icon\", {\n                                attrs: { type: \"eye\", theme: \"twoTone\" },\n                              }),\n                              _vm._v(\n                                \"简答题(每题\" +\n                                  _vm._s(_vm.currentQuestion.saqScore) +\n                                  \"分)\"\n                              ),\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm._l(_vm.subDetail, function (item, index) {\n                        return item.type === \"简答题\"\n                          ? _c(\n                              \"a-menu-item\",\n                              {\n                                key: index,\n                                on: {\n                                  click: function ($event) {\n                                    return _vm.getSubDetail(item)\n                                  },\n                                },\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n            题目\" +\n                                    _vm._s(index + 1) +\n                                    \"\\n          \"\n                                ),\n                              ]\n                            )\n                          : _vm._e()\n                      }),\n                    ],\n                    2\n                  ),\n                  _c(\n                    \"a-sub-menu\",\n                    { key: \"question_program\" },\n                    [\n                      _vm.examDetail.exam\n                        ? _c(\n                            \"span\",\n                            { attrs: { slot: \"title\" }, slot: \"title\" },\n                            [\n                              _c(\"a-icon\", {\n                                attrs: { type: \"eye\", theme: \"twoTone\" },\n                              }),\n                              _vm._v(\n                                \"程序题(每题\" +\n                                  _vm._s(_vm.currentQuestion.pqScore) +\n                                  \"分)\"\n                              ),\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm._l(_vm.subDetail, function (item, index) {\n                        return item.type === \"程序题\"\n                          ? _c(\n                              \"a-menu-item\",\n                              {\n                                key: index,\n                                on: {\n                                  click: function ($event) {\n                                    return _vm.getSubDetail(item)\n                                  },\n                                },\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n            题目\" +\n                                    _vm._s(index + 1) +\n                                    \"\\n          \"\n                                ),\n                              ]\n                            )\n                          : _vm._e()\n                      }),\n                    ],\n                    2\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"a-layout\",\n            { style: { marginLeft: \"230px\" } },\n            [\n              _c(\n                \"a-layout-content\",\n                {\n                  style: {\n                    margin: \"24px 16px 0\",\n                    height: \"84vh\",\n                    overflow: \"initial\",\n                  },\n                },\n                [\n                  _c(\n                    \"div\",\n                    {\n                      style: {\n                        padding: \"24px\",\n                        background: \"#fff\",\n                        height: \"84vh\",\n                      },\n                    },\n                    [\n                      _vm.currentQuestion === \"\"\n                        ? _c(\n                            \"span\",\n                            {\n                              staticStyle: {\n                                \"font-size\": \"30px\",\n                                \"font-family\": \"Consolas\",\n                              },\n                            },\n                            [\n                              _vm._v(\n                                \"欢迎查看本次考试情况，点击左侧题目编号可以查看答题详情\"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                      _vm.currentQuestion !== \"\"\n                        ? _c(\"span\", [\n                            _c(\"strong\", [\n                              _vm._v(_vm._s(_vm.currentQuestion.type) + \" \"),\n                            ]),\n                            _c(\"p\", {\n                              domProps: {\n                                innerHTML: _vm._s(_vm.currentQuestion.name),\n                              },\n                            }),\n                            _vm.questionRight\n                              ? _c(\n                                  \"strong\",\n                                  { staticStyle: { color: \"green\" } },\n                                  [_vm._v(\"本题您答对啦！\")]\n                                )\n                              : _vm._e(),\n                            !_vm.questionRight &&\n                            (_vm.currentQuestion.type === \"单选题\" ||\n                              _vm.currentQuestion.type === \"多选题\" ||\n                              _vm.currentQuestion.type === \"判选题\")\n                              ? _c(\n                                  \"strong\",\n                                  { staticStyle: { color: \"red\" } },\n                                  [_vm._v(\"本题您答错啦！\")]\n                                )\n                              : _vm._e(),\n                          ])\n                        : _vm._e(),\n                      _c(\"br\"),\n                      _c(\"br\"),\n                      _vm.currentQuestion.type === \"单选题\" ||\n                      _vm.currentQuestion.type === \"判断题\"\n                        ? _c(\n                            \"a-radio-group\",\n                            {\n                              model: {\n                                value: _vm.radioValue,\n                                callback: function ($$v) {\n                                  _vm.radioValue = $$v\n                                },\n                                expression: \"radioValue\",\n                              },\n                            },\n                            _vm._l(\n                              _vm.currentQuestion.options,\n                              function (option) {\n                                return _c(\n                                  \"a-radio\",\n                                  {\n                                    key: option.questionOptionId,\n                                    style: _vm.optionStyle,\n                                    attrs: { value: option.questionOptionId },\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n              \" +\n                                        _vm._s(option.questionOptionContent) +\n                                        \"\\n            \"\n                                    ),\n                                  ]\n                                )\n                              }\n                            ),\n                            1\n                          )\n                        : _vm._e(),\n                      !_vm.questionRight &&\n                      _vm.currentQuestion !== \"\" &&\n                      (_vm.currentQuestion.type === \"单选题\" ||\n                        _vm.currentQuestion.type === \"判断题\")\n                        ? _c(\n                            \"div\",\n                            [\n                              _c(\"span\", { staticStyle: { color: \"red\" } }, [\n                                _c(\"br\"),\n                                _vm._v(\"正确答案是：\"),\n                                _c(\"br\"),\n                              ]),\n                              _c(\n                                \"a-radio-group\",\n                                {\n                                  model: {\n                                    value: _vm.radioRightValue,\n                                    callback: function ($$v) {\n                                      _vm.radioRightValue = $$v\n                                    },\n                                    expression: \"radioRightValue\",\n                                  },\n                                },\n                                _vm._l(\n                                  _vm.currentQuestion.options,\n                                  function (option) {\n                                    return _c(\n                                      \"a-radio\",\n                                      {\n                                        key: option.questionOptionId,\n                                        style: _vm.optionStyle,\n                                        attrs: {\n                                          value: option.questionOptionId,\n                                        },\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                \" +\n                                            _vm._s(\n                                              option.questionOptionContent\n                                            ) +\n                                            \"\\n              \"\n                                        ),\n                                      ]\n                                    )\n                                  }\n                                ),\n                                1\n                              ),\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm.currentQuestion.type === \"多选题\"\n                        ? _c(\n                            \"a-checkbox-group\",\n                            {\n                              model: {\n                                value: _vm.checkValues,\n                                callback: function ($$v) {\n                                  _vm.checkValues = $$v\n                                },\n                                expression: \"checkValues\",\n                              },\n                            },\n                            _vm._l(\n                              _vm.currentQuestion.options,\n                              function (option) {\n                                return _c(\n                                  \"a-checkbox\",\n                                  {\n                                    key: option.questionOptionId,\n                                    style: _vm.optionStyle,\n                                    attrs: { value: option.questionOptionId },\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n              \" +\n                                        _vm._s(option.questionOptionContent) +\n                                        \"\\n            \"\n                                    ),\n                                  ]\n                                )\n                              }\n                            ),\n                            1\n                          )\n                        : _vm._e(),\n                      !_vm.questionRight &&\n                      _vm.currentQuestion !== \"\" &&\n                      _vm.currentQuestion.type === \"多选题\"\n                        ? _c(\n                            \"div\",\n                            [\n                              _c(\"span\", { staticStyle: { color: \"red\" } }, [\n                                _c(\"br\"),\n                                _vm._v(\"正确答案是：\"),\n                                _c(\"br\"),\n                              ]),\n                              _c(\n                                \"a-checkbox-group\",\n                                {\n                                  model: {\n                                    value: _vm.checkRightValues,\n                                    callback: function ($$v) {\n                                      _vm.checkRightValues = $$v\n                                    },\n                                    expression: \"checkRightValues\",\n                                  },\n                                },\n                                _vm._l(\n                                  _vm.currentQuestion.options,\n                                  function (option) {\n                                    return _c(\n                                      \"a-checkbox\",\n                                      {\n                                        key: option.questionOptionId,\n                                        style: _vm.optionStyle,\n                                        attrs: {\n                                          value: option.questionOptionId,\n                                        },\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                \" +\n                                            _vm._s(\n                                              option.questionOptionContent\n                                            ) +\n                                            \"\\n              \"\n                                        ),\n                                      ]\n                                    )\n                                  }\n                                ),\n                                1\n                              ),\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _c(\"span\", { staticStyle: { color: \"red\" } }, [\n                        _c(\"br\"),\n                        _vm._v(\"答案解析：\"),\n                        _c(\"br\"),\n                      ]),\n                      _c(\"p\", {\n                        domProps: {\n                          innerHTML: _vm._s(_vm.currentQuestion.description),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]\n              ),\n              _c(\"a-layout-footer\", { style: { textAlign: \"center\" } }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"copyright\" },\n                  [\n                    _vm._v(\"\\n          Copyright\\n          \"),\n                    _c(\"a-icon\", { attrs: { type: \"copyright\" } }),\n                    _vm._v(\" 2022 \"),\n                    _c(\"span\", [_vm._v(\"jkfl\")]),\n                  ],\n                  1\n                ),\n              ]),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}